/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IOrderBook,
  IOrderBookInterface,
} from "../../../contracts/interfaces/IOrderBook";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "price",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "qty",
        type: "tuple",
      },
    ],
    name: "placeBuyOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IOrderBook__factory {
  static readonly abi = _abi;
  static createInterface(): IOrderBookInterface {
    return new Interface(_abi) as IOrderBookInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IOrderBook {
    return new Contract(address, _abi, runner) as unknown as IOrderBook;
  }
}
