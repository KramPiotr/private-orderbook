/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { OrderBook, OrderBookInterface } from "../../contracts/OrderBook";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tradeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "baseToken",
    outputs: [
      {
        internalType: "contract IFHERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "orderIdBytes",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "priceBytes",
        type: "tuple",
      },
    ],
    name: "insertBuyOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lastFills",
    outputs: [
      {
        internalType: "euint8",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "euint8",
        name: "quantity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastShiftBy",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "orderIdBytes",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "priceBytes",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "qtyBytes",
        type: "tuple",
      },
    ],
    name: "placeBuyOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "qtyNotFilled",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shiftSellBook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeToken",
    outputs: [
      {
        internalType: "contract IFHERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001dd338038062001dd38339818101604052810190620000379190620002b4565b600160008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000d36000620000f960201b60201c565b601581905550620000eb6001620000f960201b60201c565b60168190555050506200057a565b60006200010e8260006200011560201b60201c565b9050919050565b60006060608073ffffffffffffffffffffffffffffffffffffffff166319e1c5c46200014786620001cc60201b60201c565b856040518363ffffffff1660e01b815260040162000167929190620003b3565b600060405180830381865afa15801562000185573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190620001b0919062000529565b9050620001c3816200022d60201b60201c565b91505092915050565b6060602067ffffffffffffffff811115620001ec57620001eb620003f1565b5b6040519080825280601f01601f1916602001820160405280156200021f5781602001600182028036833780820191505090505b509050816020820152919050565b600060208201519050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200027c826200024f565b9050919050565b6200028e816200026f565b81146200029a57600080fd5b50565b600081519050620002ae8162000283565b92915050565b60008060408385031215620002ce57620002cd62000245565b5b6000620002de858286016200029d565b9250506020620002f1858286016200029d565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620003375780820151818401526020810190506200031a565b60008484015250505050565b6000601f19601f8301169050919050565b60006200036182620002fb565b6200036d818562000306565b93506200037f81856020860162000317565b6200038a8162000343565b840191505092915050565b600060ff82169050919050565b620003ad8162000395565b82525050565b60006040820190508181036000830152620003cf818562000354565b9050620003e06020830184620003a2565b9392505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200042b8262000343565b810181811067ffffffffffffffff821117156200044d576200044c620003f1565b5b80604052505050565b6000620004626200023b565b905062000470828262000420565b919050565b600067ffffffffffffffff821115620004935762000492620003f1565b5b6200049e8262000343565b9050602081019050919050565b6000620004c2620004bc8462000475565b62000456565b905082815260208101848484011115620004e157620004e0620003ec565b5b620004ee84828562000317565b509392505050565b600082601f8301126200050e576200050d620003e7565b5b815162000520848260208601620004ab565b91505092915050565b60006020828403121562000542576200054162000245565b5b600082015167ffffffffffffffff8111156200056357620005626200024a565b5b6200057184828501620004f6565b91505092915050565b611849806200058a6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806382b007681161005b57806382b0076814610104578063c55dae6314610120578063d83678ac1461013e578063fc2191f01461015c57610088565b80630429d3f41461008d5780633788364c146100ab578063388c9829146100dc578063740cd32b146100fa575b600080fd5b610095610178565b6040516100a291906110c5565b60405180910390f35b6100c560048036038101906100c09190611120565b61017e565b6040516100d392919061114d565b60405180910390f35b6100e46101a8565b6040516100f191906110c5565b60405180910390f35b6101026101ae565b005b61011e6004803603810190610119919061119a565b610300565b005b61012861059b565b6040516101359190611287565b60405180910390f35b6101466105c1565b6040516101539190611287565b60405180910390f35b610176600480360381019061017191906112a2565b6105e7565b005b60145481565b600f816002811061018e57600080fd5b600202016000915090508060000154908060010154905082565b60135481565b6000601354905060005b600160026101c69190611385565b60ff168160ff1610156102fc5760006101ea601554846107f790919063ffffffff16565b9050610202816101fc8560165461080b565b8561081f565b925060006015549050600060155490506000600160026102229190611385565b90505b60008160ff16106102eb57600060098260ff1660028110610249576102486113ba565b5b60030201600201549050600060098360ff166002811061026c5761026b6113ba565b5b6003020160010154905061028186868461081f565b60098460ff1660028110610298576102976113ba565b5b60030201600201819055506102ae86858361081f565b60098460ff16600281106102c5576102c46113ba565b5b6003020160010181905550819450809350505080806102e3906113e9565b915050610225565b5050505080806001019150506101b8565b5050565b61030861089d565b600061031c83610317906115ba565b6108e3565b905060006103328361032d906115ba565b6108e3565b9050600061034060006108f9565b90506000839050600083905060006014549050600061036c6015546014546107f790919063ffffffff16565b90506000601554905060005b600260ff168160ff1610156105865760006103cc610396848b61091c565b6103c78b60038660ff16600281106103b1576103b06113ba565b5b60030201600201546107f790919063ffffffff16565b610995565b90506103e1886103dc8684610995565b610a0e565b975060038260ff16600281106103fa576103f96113ba565b5b60030201600201549250600061042f8960038560ff1660028110610421576104206113ba565b5b60030201600001548a61081f565b9050600061045c8a60038660ff166002811061044e5761044d6113ba565b5b60030201600201548a61081f565b905060006104898b60038760ff166002811061047b5761047a6113ba565b5b60030201600101548a61081f565b90506104b48b8b60038860ff16600281106104a7576104a66113ba565b5b600302016000015461081f565b60038660ff16600281106104cb576104ca6113ba565b5b60030201600001819055506104ff8b8a60038860ff16600281106104f2576104f16113ba565b5b600302016002015461081f565b60038660ff1660028110610516576105156113ba565b5b600302016002018190555061054a8b8960038860ff166002811061053d5761053c6113ba565b5b600302016001015461081f565b60038660ff1660028110610561576105606113ba565b5b6003020160010181905550829950819850809750505050508080600101915050610378565b505050505050505050610597610a87565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105ef61089d565b6000610603846105fe906115ba565b6108e3565b9050600061061983610614906115ba565b6108e3565b9050600061062f8561062a906115ba565b6108e3565b90506000601554905060005b600260ff168160ff1610156107d757600061067d60098360ff1660028110610666576106656113ba565b5b600302016002015485610a9190919063ffffffff16565b905060006106a98660098560ff166002811061069c5761069b6113ba565b5b6003020160010154610aa5565b905060006106ba838360155461081f565b90506106c6878261080b565b96506106f060098560ff16600281106106e2576106e16113ba565b5b60030201600101548261080b565b60098560ff1660028110610707576107066113ba565b5b6003020160010181905550600061072086601654610b1e565b905061075f61075860155460098860ff1660028110610742576107416113ba565b5b6003020160010154610b3290919063ffffffff16565b828861081f565b9550604051806040016040528060098760ff1660028110610783576107826113ba565b5b6003020160000154815260200183815250600f8660ff16600281106107ab576107aa6113ba565b5b60020201600082015181600001556020820151816001015590505050505050808060010191505061063b565b508060138190555082601481905550505050506107f2610a87565b505050565b60006108038383610b46565b905092915050565b60006108178383610bbf565b905092915050565b600061082a84610c38565b61083b576108386000610c45565b93505b61084483610c59565b610855576108526000610c66565b92505b61085e82610c59565b61086f5761086c6000610c66565b91505b600084905060008490506000849050600061088d6000858585610c7a565b9050809450505050509392505050565b6002600054036108d9576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b60006108f28260000151610d32565b9050919050565b60008060009050821561090b57600190505b61091481610c45565b915050919050565b600061092783610c59565b610938576109356000610c66565b92505b61094182610c59565b6109525761094f6000610c66565b91505b60008390506000839050600061098760008484608073ffffffffffffffffffffffffffffffffffffffff166392348b34610d46565b905080935050505092915050565b60006109a083610c38565b6109b1576109ae6000610c45565b92505b6109ba82610c38565b6109cb576109c86000610c45565b91505b600083905060008390506000610a0060008484608073ffffffffffffffffffffffffffffffffffffffff1663ae104cfd610d46565b905080935050505092915050565b6000610a1983610c38565b610a2a57610a276000610c45565b92505b610a3382610c38565b610a4457610a416000610c45565b91505b600083905060008390506000610a7960008484608073ffffffffffffffffffffffffffffffffffffffff166372d456f5610d46565b905080935050505092915050565b6001600081905550565b6000610a9d8383610dda565b905092915050565b6000610ab083610c59565b610ac157610abe6000610c66565b92505b610aca82610c59565b610adb57610ad86000610c66565b91505b600083905060008390506000610b1060008484608073ffffffffffffffffffffffffffffffffffffffff16635211c679610d46565b905080935050505092915050565b6000610b2a8383610e53565b905092915050565b6000610b3e838361091c565b905092915050565b6000610b5183610c59565b610b6257610b5f6000610c66565b92505b610b6b82610c59565b610b7c57610b796000610c66565b91505b600083905060008390506000610bb160008484608073ffffffffffffffffffffffffffffffffffffffff1663874b1c10610d46565b905080935050505092915050565b6000610bca83610c59565b610bdb57610bd86000610c66565b92505b610be482610c59565b610bf557610bf26000610c66565b91505b600083905060008390506000610c2a60008484608073ffffffffffffffffffffffffffffffffffffffff1663cc2cbeff610d46565b905080935050505092915050565b6000808214159050919050565b6000610c52826000610ecb565b9050919050565b6000808214159050919050565b6000610c73826000610ecb565b9050919050565b60006060608073ffffffffffffffffffffffffffffffffffffffff1663c2d9695287610ca588610f6d565b610cae88610f6d565b610cb788610f6d565b6040518563ffffffff1660e01b8152600401610cd6949392919061165b565b600060405180830381865afa158015610cf3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d1c9190611725565b9050610d2781610fca565b915050949350505050565b6000610d3f826000610fd8565b9050919050565b60006060838388610d5689610f6d565b610d5f89610f6d565b6040518463ffffffff1660e01b8152600401610d7d9392919061176e565b600060405180830381865afa158015610d9a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610dc39190611725565b9050610dce81611072565b91505095945050505050565b6000610de583610c59565b610df657610df36000610c66565b92505b610dff82610c59565b610e1057610e0d6000610c66565b91505b600083905060008390506000610e4560008484608073ffffffffffffffffffffffffffffffffffffffff1663650de1cf610d46565b905080935050505092915050565b6000610e5e83610c59565b610e6f57610e6c6000610c66565b92505b610e7882610c59565b610e8957610e866000610c66565b91505b600083905060008390506000610ebd60008484608073ffffffffffffffffffffffffffffffffffffffff16622df619610d46565b905080935050505092915050565b60006060608073ffffffffffffffffffffffffffffffffffffffff166319e1c5c4610ef586610f6d565b856040518363ffffffff1660e01b8152600401610f139291906117b3565b600060405180830381865afa158015610f30573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610f599190611725565b9050610f6481610fca565b91505092915050565b6060602067ffffffffffffffff811115610f8a57610f89611428565b5b6040519080825280601f01601f191660200182016040528015610fbc5781602001600182028036833780820191505090505b509050816020820152919050565b600060208201519050919050565b60006060608073ffffffffffffffffffffffffffffffffffffffff16635fa55ca784866040518363ffffffff1660e01b81526004016110189291906117e3565b600060405180830381865afa158015611035573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061105e9190611725565b905061106981610fca565b91505092915050565b600060208201519050919050565b6000819050919050565b6000819050919050565b60006110af6110aa6110a584611080565b61108a565b611080565b9050919050565b6110bf81611094565b82525050565b60006020820190506110da60008301846110b6565b92915050565b6000604051905090565b600080fd5b600080fd5b6110fd81611080565b811461110857600080fd5b50565b60008135905061111a816110f4565b92915050565b600060208284031215611136576111356110ea565b5b60006111448482850161110b565b91505092915050565b600060408201905061116260008301856110b6565b61116f60208301846110b6565b9392505050565b600080fd5b60006020828403121561119157611190611176565b5b81905092915050565b600080604083850312156111b1576111b06110ea565b5b600083013567ffffffffffffffff8111156111cf576111ce6110ef565b5b6111db8582860161117b565b925050602083013567ffffffffffffffff8111156111fc576111fb6110ef565b5b6112088582860161117b565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061124d61124861124384611212565b61108a565b611212565b9050919050565b600061125f82611232565b9050919050565b600061127182611254565b9050919050565b61128181611266565b82525050565b600060208201905061129c6000830184611278565b92915050565b6000806000606084860312156112bb576112ba6110ea565b5b600084013567ffffffffffffffff8111156112d9576112d86110ef565b5b6112e58682870161117b565b935050602084013567ffffffffffffffff811115611306576113056110ef565b5b6113128682870161117b565b925050604084013567ffffffffffffffff811115611333576113326110ef565b5b61133f8682870161117b565b9150509250925092565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061139082611349565b915061139b83611349565b9250828203905060ff8111156113b4576113b3611356565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006113f482611349565b91506000820361140757611406611356565b5b600182039050919050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61146082611417565b810181811067ffffffffffffffff8211171561147f5761147e611428565b5b80604052505050565b60006114926110e0565b905061149e8282611457565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff8211156114cd576114cc611428565b5b6114d682611417565b9050602081019050919050565b82818337600083830152505050565b6000611505611500846114b2565b611488565b905082815260208101848484011115611521576115206114ad565b5b61152c8482856114e3565b509392505050565b600082601f830112611549576115486114a8565b5b81356115598482602086016114f2565b91505092915050565b60006020828403121561157857611577611412565b5b6115826020611488565b9050600082013567ffffffffffffffff8111156115a2576115a16114a3565b5b6115ae84828501611534565b60008301525092915050565b60006115c63683611562565b9050919050565b6115d681611349565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116165780820151818401526020810190506115fb565b60008484015250505050565b600061162d826115dc565b61163781856115e7565b93506116478185602086016115f8565b61165081611417565b840191505092915050565b600060808201905061167060008301876115cd565b81810360208301526116828186611622565b905081810360408301526116968185611622565b905081810360608301526116aa8184611622565b905095945050505050565b60006116c86116c3846114b2565b611488565b9050828152602081018484840111156116e4576116e36114ad565b5b6116ef8482856115f8565b509392505050565b600082601f83011261170c5761170b6114a8565b5b815161171c8482602086016116b5565b91505092915050565b60006020828403121561173b5761173a6110ea565b5b600082015167ffffffffffffffff811115611759576117586110ef565b5b611765848285016116f7565b91505092915050565b600060608201905061178360008301866115cd565b81810360208301526117958185611622565b905081810360408301526117a98184611622565b9050949350505050565b600060408201905081810360008301526117cd8185611622565b90506117dc60208301846115cd565b9392505050565b60006040820190506117f860008301856115cd565b818103602083015261180a8184611622565b9050939250505056fea26469706673582212200b983212d8540c555d58bff0f64335a7419367ed609fcd942fd53a65009cc5e464736f6c63430008180033";

type OrderBookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderBookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrderBook__factory extends ContractFactory {
  constructor(...args: OrderBookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tradeToken: AddressLike,
    _baseToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_tradeToken, _baseToken, overrides || {});
  }
  override deploy(
    _tradeToken: AddressLike,
    _baseToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_tradeToken, _baseToken, overrides || {}) as Promise<
      OrderBook & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OrderBook__factory {
    return super.connect(runner) as OrderBook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderBookInterface {
    return new Interface(_abi) as OrderBookInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): OrderBook {
    return new Contract(address, _abi, runner) as unknown as OrderBook;
  }
}
