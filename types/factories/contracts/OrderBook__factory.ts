/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { OrderBook, OrderBookInterface } from "../../contracts/OrderBook";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tradeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "baseToken",
    outputs: [
      {
        internalType: "contract IFHERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "orderIdBytes",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "priceBytes",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "qtyBytes",
        type: "tuple",
      },
    ],
    name: "placeBuyOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "euint8",
                name: "orderId",
                type: "uint256",
              },
              {
                internalType: "euint8",
                name: "quantity",
                type: "uint256",
              },
            ],
            internalType: "struct OrderBook.ExecutionResult[2]",
            name: "fills",
            type: "tuple[2]",
          },
          {
            internalType: "euint8",
            name: "shiftBy",
            type: "uint256",
          },
        ],
        internalType: "struct OrderBook.PlaceOrderResult",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "shiftByBytes",
        type: "tuple",
      },
    ],
    name: "shiftSellBook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeToken",
    outputs: [
      {
        internalType: "contract IFHERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a0a38038062001a0a8339818101604052810190620000379190620002b4565b600160008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000d36000620000f960201b60201c565b600f81905550620000eb6001620000f960201b60201c565b60108190555050506200057a565b60006200010e8260006200011560201b60201c565b9050919050565b60006060608073ffffffffffffffffffffffffffffffffffffffff166319e1c5c46200014786620001cc60201b60201c565b856040518363ffffffff1660e01b815260040162000167929190620003b3565b600060405180830381865afa15801562000185573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190620001b0919062000529565b9050620001c3816200022d60201b60201c565b91505092915050565b6060602067ffffffffffffffff811115620001ec57620001eb620003f1565b5b6040519080825280601f01601f1916602001820160405280156200021f5781602001600182028036833780820191505090505b509050816020820152919050565b600060208201519050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200027c826200024f565b9050919050565b6200028e816200026f565b81146200029a57600080fd5b50565b600081519050620002ae8162000283565b92915050565b60008060408385031215620002ce57620002cd62000245565b5b6000620002de858286016200029d565b9250506020620002f1858286016200029d565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620003375780820151818401526020810190506200031a565b60008484015250505050565b6000601f19601f8301169050919050565b60006200036182620002fb565b6200036d818562000306565b93506200037f81856020860162000317565b6200038a8162000343565b840191505092915050565b600060ff82169050919050565b620003ad8162000395565b82525050565b60006040820190508181036000830152620003cf818562000354565b9050620003e06020830184620003a2565b9392505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200042b8262000343565b810181811067ffffffffffffffff821117156200044d576200044c620003f1565b5b80604052505050565b6000620004626200023b565b905062000470828262000420565b919050565b600067ffffffffffffffff821115620004935762000492620003f1565b5b6200049e8262000343565b9050602081019050919050565b6000620004c2620004bc8462000475565b62000456565b905082815260208101848484011115620004e157620004e0620003ec565b5b620004ee84828562000317565b509392505050565b600082601f8301126200050e576200050d620003e7565b5b815162000520848260208601620004ab565b91505092915050565b60006020828403121562000542576200054162000245565b5b600082015167ffffffffffffffff8111156200056357620005626200024a565b5b6200057184828501620004f6565b91505092915050565b611480806200058a6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063b62107d514610051578063c55dae631461006d578063d83678ac1461008b578063fc2191f0146100a9575b600080fd5b61006b60048036038101906100669190610ca6565b6100d9565b005b61007561022f565b6040516100829190610d6e565b60405180910390f35b610093610255565b6040516100a09190610d6e565b60405180910390f35b6100c360048036038101906100be9190610d89565b61027b565b6040516100d09190610f65565b60405180910390f35b60006100ed826100e890611128565b610493565b905060005b600260ff168160ff16101561022a576000610118600f54846104a990919063ffffffff16565b90506101308161012a856010546104bd565b856104d1565b92506000600f5490506000600f5490506000600160026101509190611177565b90505b60008160ff161061021957600060098260ff1660028110610177576101766111ac565b5b60030201600201549050600060098360ff166002811061019a576101996111ac565b5b600302016001015490506101af8686846104d1565b60098460ff16600281106101c6576101c56111ac565b5b60030201600201819055506101dc8685836104d1565b60098460ff16600281106101f3576101f26111ac565b5b600302016001018190555081945080935050508080610211906111db565b915050610153565b5050505080806001019150506100f2565b505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610283610c07565b61028b61054f565b600061029f8561029a90611128565b610493565b905060006102b5846102b090611128565b610493565b905060006102cb866102c690611128565b610493565b90506102d5610c27565b6000600f54905060005b600260ff168160ff16101561046757600061032160098360ff166002811061030a576103096111ac565b5b60030201600201548661059590919063ffffffff16565b9050600061034d8760098560ff16600281106103405761033f6111ac565b5b60030201600101546105a9565b9050600061035e8383600f546104d1565b905061036a88826104bd565b975061039460098560ff1660028110610386576103856111ac565b5b6003020160010154826104bd565b60098560ff16600281106103ab576103aa6111ac565b5b600302016001018190555060006103c486601054610622565b90506104036103fc600f5460098860ff16600281106103e6576103e56111ac565b5b600302016001015461063690919063ffffffff16565b82886104d1565b9550604051806040016040528060098760ff1660028110610427576104266111ac565b5b6003020160000154815260200183815250878660ff166002811061044e5761044d6111ac565b5b60200201819052505050505080806001019150506102df565b506040518060400160405280838152602001828152509550505050505061048c61064a565b9392505050565b60006104a28260000151610654565b9050919050565b60006104b58383610668565b905092915050565b60006104c983836106e1565b905092915050565b60006104dc8461075a565b6104ed576104ea6000610767565b93505b6104f68361077b565b610507576105046000610788565b92505b6105108261077b565b6105215761051e6000610788565b91505b600084905060008490506000849050600061053f600085858561079c565b9050809450505050509392505050565b60026000540361058b576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b60006105a18383610854565b905092915050565b60006105b48361077b565b6105c5576105c26000610788565b92505b6105ce8261077b565b6105df576105dc6000610788565b91505b60008390506000839050600061061460008484608073ffffffffffffffffffffffffffffffffffffffff16635211c6796108cd565b905080935050505092915050565b600061062e8383610961565b905092915050565b600061064283836109d9565b905092915050565b6001600081905550565b6000610661826000610a52565b9050919050565b60006106738361077b565b610684576106816000610788565b92505b61068d8261077b565b61069e5761069b6000610788565b91505b6000839050600083905060006106d360008484608073ffffffffffffffffffffffffffffffffffffffff1663874b1c106108cd565b905080935050505092915050565b60006106ec8361077b565b6106fd576106fa6000610788565b92505b6107068261077b565b610717576107146000610788565b91505b60008390506000839050600061074c60008484608073ffffffffffffffffffffffffffffffffffffffff1663cc2cbeff6108cd565b905080935050505092915050565b6000808214159050919050565b6000610774826000610aec565b9050919050565b6000808214159050919050565b6000610795826000610aec565b9050919050565b60006060608073ffffffffffffffffffffffffffffffffffffffff1663c2d96952876107c788610b8e565b6107d088610b8e565b6107d988610b8e565b6040518563ffffffff1660e01b81526004016107f89493929190611292565b600060405180830381865afa158015610815573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061083e919061135c565b905061084981610beb565b915050949350505050565b600061085f8361077b565b6108705761086d6000610788565b92505b6108798261077b565b61088a576108876000610788565b91505b6000839050600083905060006108bf60008484608073ffffffffffffffffffffffffffffffffffffffff1663650de1cf6108cd565b905080935050505092915050565b600060608383886108dd89610b8e565b6108e689610b8e565b6040518463ffffffff1660e01b8152600401610904939291906113a5565b600060405180830381865afa158015610921573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061094a919061135c565b905061095581610bf9565b91505095945050505050565b600061096c8361077b565b61097d5761097a6000610788565b92505b6109868261077b565b610997576109946000610788565b91505b6000839050600083905060006109cb60008484608073ffffffffffffffffffffffffffffffffffffffff16622df6196108cd565b905080935050505092915050565b60006109e48361077b565b6109f5576109f26000610788565b92505b6109fe8261077b565b610a0f57610a0c6000610788565b91505b600083905060008390506000610a4460008484608073ffffffffffffffffffffffffffffffffffffffff166392348b346108cd565b905080935050505092915050565b60006060608073ffffffffffffffffffffffffffffffffffffffff16635fa55ca784866040518363ffffffff1660e01b8152600401610a929291906113ea565b600060405180830381865afa158015610aaf573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610ad8919061135c565b9050610ae381610beb565b91505092915050565b60006060608073ffffffffffffffffffffffffffffffffffffffff166319e1c5c4610b1686610b8e565b856040518363ffffffff1660e01b8152600401610b3492919061141a565b600060405180830381865afa158015610b51573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b7a919061135c565b9050610b8581610beb565b91505092915050565b6060602067ffffffffffffffff811115610bab57610baa610f96565b5b6040519080825280601f01601f191660200182016040528015610bdd5781602001600182028036833780820191505090505b509050816020820152919050565b600060208201519050919050565b600060208201519050919050565b6040518060400160405280610c1a610c27565b8152602001600081525090565b60405180604001604052806002905b610c3e610c54565b815260200190600190039081610c365790505090565b604051806040016040528060008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600060208284031215610c9d57610c9c610c82565b5b81905092915050565b600060208284031215610cbc57610cbb610c78565b5b600082013567ffffffffffffffff811115610cda57610cd9610c7d565b5b610ce684828501610c87565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d34610d2f610d2a84610cef565b610d0f565b610cef565b9050919050565b6000610d4682610d19565b9050919050565b6000610d5882610d3b565b9050919050565b610d6881610d4d565b82525050565b6000602082019050610d836000830184610d5f565b92915050565b600080600060608486031215610da257610da1610c78565b5b600084013567ffffffffffffffff811115610dc057610dbf610c7d565b5b610dcc86828701610c87565b935050602084013567ffffffffffffffff811115610ded57610dec610c7d565b5b610df986828701610c87565b925050604084013567ffffffffffffffff811115610e1a57610e19610c7d565b5b610e2686828701610c87565b9150509250925092565b600060029050919050565b600081905092915050565b6000819050919050565b6000819050919050565b6000610e75610e70610e6b84610e50565b610d0f565b610e50565b9050919050565b610e8581610e5a565b82525050565b604082016000820151610ea16000850182610e7c565b506020820151610eb46020850182610e7c565b50505050565b6000610ec68383610e8b565b60408301905092915050565b6000602082019050919050565b610ee881610e30565b610ef28184610e3b565b9250610efd82610e46565b8060005b83811015610f2e578151610f158782610eba565b9650610f2083610ed2565b925050600181019050610f01565b505050505050565b60a082016000820151610f4c6000850182610edf565b506020820151610f5f6080850182610e7c565b50505050565b600060a082019050610f7a6000830184610f36565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fce82610f85565b810181811067ffffffffffffffff82111715610fed57610fec610f96565b5b80604052505050565b6000611000610c6e565b905061100c8282610fc5565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff82111561103b5761103a610f96565b5b61104482610f85565b9050602081019050919050565b82818337600083830152505050565b600061107361106e84611020565b610ff6565b90508281526020810184848401111561108f5761108e61101b565b5b61109a848285611051565b509392505050565b600082601f8301126110b7576110b6611016565b5b81356110c7848260208601611060565b91505092915050565b6000602082840312156110e6576110e5610f80565b5b6110f06020610ff6565b9050600082013567ffffffffffffffff8111156111105761110f611011565b5b61111c848285016110a2565b60008301525092915050565b600061113436836110d0565b9050919050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111828261113b565b915061118d8361113b565b9250828203905060ff8111156111a6576111a5611148565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006111e68261113b565b9150600082036111f9576111f8611148565b5b600182039050919050565b61120d8161113b565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561124d578082015181840152602081019050611232565b60008484015250505050565b600061126482611213565b61126e818561121e565b935061127e81856020860161122f565b61128781610f85565b840191505092915050565b60006080820190506112a76000830187611204565b81810360208301526112b98186611259565b905081810360408301526112cd8185611259565b905081810360608301526112e18184611259565b905095945050505050565b60006112ff6112fa84611020565b610ff6565b90508281526020810184848401111561131b5761131a61101b565b5b61132684828561122f565b509392505050565b600082601f83011261134357611342611016565b5b81516113538482602086016112ec565b91505092915050565b60006020828403121561137257611371610c78565b5b600082015167ffffffffffffffff8111156113905761138f610c7d565b5b61139c8482850161132e565b91505092915050565b60006060820190506113ba6000830186611204565b81810360208301526113cc8185611259565b905081810360408301526113e08184611259565b9050949350505050565b60006040820190506113ff6000830185611204565b81810360208301526114118184611259565b90509392505050565b600060408201905081810360008301526114348185611259565b90506114436020830184611204565b939250505056fea264697066735822122014092f6fcbedd3e4f9cbd9c29713518495e829b60496b67c4d7c062fe3ce255d64736f6c63430008180033";

type OrderBookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderBookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrderBook__factory extends ContractFactory {
  constructor(...args: OrderBookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tradeToken: AddressLike,
    _baseToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_tradeToken, _baseToken, overrides || {});
  }
  override deploy(
    _tradeToken: AddressLike,
    _baseToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_tradeToken, _baseToken, overrides || {}) as Promise<
      OrderBook & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OrderBook__factory {
    return super.connect(runner) as OrderBook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderBookInterface {
    return new Interface(_abi) as OrderBookInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): OrderBook {
    return new Contract(address, _abi, runner) as unknown as OrderBook;
  }
}
