/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { OrderBook, OrderBookInterface } from "../../contracts/OrderBook";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tradeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "baseToken",
    outputs: [
      {
        internalType: "contract IFHERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPlaceOrderResult",
    outputs: [
      {
        internalType: "euint8",
        name: "shiftBy",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "orderIdBytes",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "priceBytes",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "qtyBytes",
        type: "tuple",
      },
    ],
    name: "placeBuyOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "shiftByBytes",
        type: "tuple",
      },
    ],
    name: "shiftSellBook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeToken",
    outputs: [
      {
        internalType: "contract IFHERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018c1380380620018c18339818101604052810190620000379190620002b4565b600160008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000d36000620000f960201b60201c565b601481905550620000eb6001620000f960201b60201c565b60158190555050506200057a565b60006200010e8260006200011560201b60201c565b9050919050565b60006060608073ffffffffffffffffffffffffffffffffffffffff166319e1c5c46200014786620001cc60201b60201c565b856040518363ffffffff1660e01b815260040162000167929190620003b3565b600060405180830381865afa15801562000185573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190620001b0919062000529565b9050620001c3816200022d60201b60201c565b91505092915050565b6060602067ffffffffffffffff811115620001ec57620001eb620003f1565b5b6040519080825280601f01601f1916602001820160405280156200021f5781602001600182028036833780820191505090505b509050816020820152919050565b600060208201519050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200027c826200024f565b9050919050565b6200028e816200026f565b81146200029a57600080fd5b50565b600081519050620002ae8162000283565b92915050565b60008060408385031215620002ce57620002cd62000245565b5b6000620002de858286016200029d565b9250506020620002f1858286016200029d565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620003375780820151818401526020810190506200031a565b60008484015250505050565b6000601f19601f8301169050919050565b60006200036182620002fb565b6200036d818562000306565b93506200037f81856020860162000317565b6200038a8162000343565b840191505092915050565b600060ff82169050919050565b620003ad8162000395565b82525050565b60006040820190508181036000830152620003cf818562000354565b9050620003e06020830184620003a2565b9392505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200042b8262000343565b810181811067ffffffffffffffff821117156200044d576200044c620003f1565b5b80604052505050565b6000620004626200023b565b905062000470828262000420565b919050565b600067ffffffffffffffff821115620004935762000492620003f1565b5b6200049e8262000343565b9050602081019050919050565b6000620004c2620004bc8462000475565b62000456565b905082815260208101848484011115620004e157620004e0620003ec565b5b620004ee84828562000317565b509392505050565b600082601f8301126200050e576200050d620003e7565b5b815162000520848260208601620004ab565b91505092915050565b60006020828403121562000542576200054162000245565b5b600082015167ffffffffffffffff8111156200056357620005626200024a565b5b6200057184828501620004f6565b91505092915050565b611337806200058a6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80637acdc4e91461005c578063b62107d51461007a578063c55dae6314610096578063d83678ac146100b4578063fc2191f0146100d2575b600080fd5b6100646100ee565b6040516100719190610c64565b60405180910390f35b610094600480360381019061008f9190610cb7565b6100fa565b005b61009e610250565b6040516100ab9190610d75565b60405180910390f35b6100bc610276565b6040516100c99190610d75565b60405180910390f35b6100ec60048036038101906100e79190610d90565b61029c565b005b600f8060040154905081565b600061010e8261010990610fdf565b6104ab565b905060005b600260ff168160ff16101561024b576000610139601454846104c190919063ffffffff16565b90506101518161014b856015546104d5565b856104e9565b92506000601454905060006014549050600060016002610171919061102e565b90505b60008160ff161061023a57600060098260ff166002811061019857610197611063565b5b60030201600201549050600060098360ff16600281106101bb576101ba611063565b5b600302016001015490506101d08686846104e9565b60098460ff16600281106101e7576101e6611063565b5b60030201600201819055506101fd8685836104e9565b60098460ff166002811061021457610213611063565b5b60030201600101819055508194508093505050808061023290611092565b915050610174565b505050508080600101915050610113565b505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102a4610567565b60006102b8846102b390610fdf565b6104ab565b905060006102ce836102c990610fdf565b6104ab565b905060006102e4856102df90610fdf565b6104ab565b90506000601454905060005b600260ff168160ff16101561048f57600061033260098360ff166002811061031b5761031a611063565b5b6003020160020154856105ad90919063ffffffff16565b9050600061035e8660098560ff166002811061035157610350611063565b5b60030201600101546105c1565b9050600061036f83836014546104e9565b905061037b87826104d5565b96506103a560098560ff166002811061039757610396611063565b5b6003020160010154826104d5565b60098560ff16600281106103bc576103bb611063565b5b600302016001018190555060006103d58660155461063a565b905061041461040d60145460098860ff16600281106103f7576103f6611063565b5b600302016001015461064e90919063ffffffff16565b82886104e9565b9550604051806040016040528060098760ff166002811061043857610437611063565b5b6003020160000154815260200183815250600f6000018660ff166002811061046357610462611063565b5b6002020160008201518160000155602082015181600101559050505050505080806001019150506102f0565b5080600f60040181905550505050506104a6610662565b505050565b60006104ba826000015161066c565b9050919050565b60006104cd8383610680565b905092915050565b60006104e183836106f9565b905092915050565b60006104f484610772565b61050557610502600061077f565b93505b61050e83610793565b61051f5761051c60006107a0565b92505b61052882610793565b6105395761053660006107a0565b91505b600084905060008490506000849050600061055760008585856107b4565b9050809450505050509392505050565b6002600054036105a3576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b60006105b9838361086c565b905092915050565b60006105cc83610793565b6105dd576105da60006107a0565b92505b6105e682610793565b6105f7576105f460006107a0565b91505b60008390506000839050600061062c60008484608073ffffffffffffffffffffffffffffffffffffffff16635211c6796108e5565b905080935050505092915050565b60006106468383610979565b905092915050565b600061065a83836109f1565b905092915050565b6001600081905550565b6000610679826000610a6a565b9050919050565b600061068b83610793565b61069c5761069960006107a0565b92505b6106a582610793565b6106b6576106b360006107a0565b91505b6000839050600083905060006106eb60008484608073ffffffffffffffffffffffffffffffffffffffff1663874b1c106108e5565b905080935050505092915050565b600061070483610793565b6107155761071260006107a0565b92505b61071e82610793565b61072f5761072c60006107a0565b91505b60008390506000839050600061076460008484608073ffffffffffffffffffffffffffffffffffffffff1663cc2cbeff6108e5565b905080935050505092915050565b6000808214159050919050565b600061078c826000610b04565b9050919050565b6000808214159050919050565b60006107ad826000610b04565b9050919050565b60006060608073ffffffffffffffffffffffffffffffffffffffff1663c2d96952876107df88610ba6565b6107e888610ba6565b6107f188610ba6565b6040518563ffffffff1660e01b81526004016108109493929190611149565b600060405180830381865afa15801561082d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108569190611213565b905061086181610c03565b915050949350505050565b600061087783610793565b6108885761088560006107a0565b92505b61089182610793565b6108a25761089f60006107a0565b91505b6000839050600083905060006108d760008484608073ffffffffffffffffffffffffffffffffffffffff1663650de1cf6108e5565b905080935050505092915050565b600060608383886108f589610ba6565b6108fe89610ba6565b6040518463ffffffff1660e01b815260040161091c9392919061125c565b600060405180830381865afa158015610939573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109629190611213565b905061096d81610c11565b91505095945050505050565b600061098483610793565b6109955761099260006107a0565b92505b61099e82610793565b6109af576109ac60006107a0565b91505b6000839050600083905060006109e360008484608073ffffffffffffffffffffffffffffffffffffffff16622df6196108e5565b905080935050505092915050565b60006109fc83610793565b610a0d57610a0a60006107a0565b92505b610a1682610793565b610a2757610a2460006107a0565b91505b600083905060008390506000610a5c60008484608073ffffffffffffffffffffffffffffffffffffffff166392348b346108e5565b905080935050505092915050565b60006060608073ffffffffffffffffffffffffffffffffffffffff16635fa55ca784866040518363ffffffff1660e01b8152600401610aaa9291906112a1565b600060405180830381865afa158015610ac7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610af09190611213565b9050610afb81610c03565b91505092915050565b60006060608073ffffffffffffffffffffffffffffffffffffffff166319e1c5c4610b2e86610ba6565b856040518363ffffffff1660e01b8152600401610b4c9291906112d1565b600060405180830381865afa158015610b69573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b929190611213565b9050610b9d81610c03565b91505092915050565b6060602067ffffffffffffffff811115610bc357610bc2610e4d565b5b6040519080825280601f01601f191660200182016040528015610bf55781602001600182028036833780820191505090505b509050816020820152919050565b600060208201519050919050565b600060208201519050919050565b6000819050919050565b6000819050919050565b6000610c4e610c49610c4484610c1f565b610c29565b610c1f565b9050919050565b610c5e81610c33565b82525050565b6000602082019050610c796000830184610c55565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600060208284031215610cae57610cad610c93565b5b81905092915050565b600060208284031215610ccd57610ccc610c89565b5b600082013567ffffffffffffffff811115610ceb57610cea610c8e565b5b610cf784828501610c98565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d3b610d36610d3184610d00565b610c29565b610d00565b9050919050565b6000610d4d82610d20565b9050919050565b6000610d5f82610d42565b9050919050565b610d6f81610d54565b82525050565b6000602082019050610d8a6000830184610d66565b92915050565b600080600060608486031215610da957610da8610c89565b5b600084013567ffffffffffffffff811115610dc757610dc6610c8e565b5b610dd386828701610c98565b935050602084013567ffffffffffffffff811115610df457610df3610c8e565b5b610e0086828701610c98565b925050604084013567ffffffffffffffff811115610e2157610e20610c8e565b5b610e2d86828701610c98565b9150509250925092565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e8582610e3c565b810181811067ffffffffffffffff82111715610ea457610ea3610e4d565b5b80604052505050565b6000610eb7610c7f565b9050610ec38282610e7c565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115610ef257610ef1610e4d565b5b610efb82610e3c565b9050602081019050919050565b82818337600083830152505050565b6000610f2a610f2584610ed7565b610ead565b905082815260208101848484011115610f4657610f45610ed2565b5b610f51848285610f08565b509392505050565b600082601f830112610f6e57610f6d610ecd565b5b8135610f7e848260208601610f17565b91505092915050565b600060208284031215610f9d57610f9c610e37565b5b610fa76020610ead565b9050600082013567ffffffffffffffff811115610fc757610fc6610ec8565b5b610fd384828501610f59565b60008301525092915050565b6000610feb3683610f87565b9050919050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061103982610ff2565b915061104483610ff2565b9250828203905060ff81111561105d5761105c610fff565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061109d82610ff2565b9150600082036110b0576110af610fff565b5b600182039050919050565b6110c481610ff2565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111045780820151818401526020810190506110e9565b60008484015250505050565b600061111b826110ca565b61112581856110d5565b93506111358185602086016110e6565b61113e81610e3c565b840191505092915050565b600060808201905061115e60008301876110bb565b81810360208301526111708186611110565b905081810360408301526111848185611110565b905081810360608301526111988184611110565b905095945050505050565b60006111b66111b184610ed7565b610ead565b9050828152602081018484840111156111d2576111d1610ed2565b5b6111dd8482856110e6565b509392505050565b600082601f8301126111fa576111f9610ecd565b5b815161120a8482602086016111a3565b91505092915050565b60006020828403121561122957611228610c89565b5b600082015167ffffffffffffffff81111561124757611246610c8e565b5b611253848285016111e5565b91505092915050565b600060608201905061127160008301866110bb565b81810360208301526112838185611110565b905081810360408301526112978184611110565b9050949350505050565b60006040820190506112b660008301856110bb565b81810360208301526112c88184611110565b90509392505050565b600060408201905081810360008301526112eb8185611110565b90506112fa60208301846110bb565b939250505056fea26469706673582212207155a9cee8f710ff23454708ec5f967040d634875d5efee44016aac0ac27453a64736f6c63430008180033";

type OrderBookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderBookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrderBook__factory extends ContractFactory {
  constructor(...args: OrderBookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tradeToken: AddressLike,
    _baseToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_tradeToken, _baseToken, overrides || {});
  }
  override deploy(
    _tradeToken: AddressLike,
    _baseToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_tradeToken, _baseToken, overrides || {}) as Promise<
      OrderBook & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OrderBook__factory {
    return super.connect(runner) as OrderBook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderBookInterface {
    return new Interface(_abi) as OrderBookInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): OrderBook {
    return new Contract(address, _abi, runner) as unknown as OrderBook;
  }
}
