/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { OrderBook, OrderBookInterface } from "../../contracts/OrderBook";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tradeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "baseToken",
    outputs: [
      {
        internalType: "contract IFHERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "orderIdBytes",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "priceBytes",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "qtyBytes",
        type: "tuple",
      },
    ],
    name: "placeBuyOrder",
    outputs: [
      {
        components: [
          {
            internalType: "euint8",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "euint8",
            name: "quantity",
            type: "uint256",
          },
        ],
        internalType: "struct OrderBook.ExecutionResult[2]",
        name: "",
        type: "tuple[2]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeToken",
    outputs: [
      {
        internalType: "contract IFHERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200191d3803806200191d8339818101604052810190620000379190620002b4565b600160008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000d36000620000f960201b60201c565b600f81905550620000eb6001620000f960201b60201c565b60108190555050506200057a565b60006200010e8260006200011560201b60201c565b9050919050565b60006060608073ffffffffffffffffffffffffffffffffffffffff166319e1c5c46200014786620001cc60201b60201c565b856040518363ffffffff1660e01b815260040162000167929190620003b3565b600060405180830381865afa15801562000185573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190620001b0919062000529565b9050620001c3816200022d60201b60201c565b91505092915050565b6060602067ffffffffffffffff811115620001ec57620001eb620003f1565b5b6040519080825280601f01601f1916602001820160405280156200021f5781602001600182028036833780820191505090505b509050816020820152919050565b600060208201519050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200027c826200024f565b9050919050565b6200028e816200026f565b81146200029a57600080fd5b50565b600081519050620002ae8162000283565b92915050565b60008060408385031215620002ce57620002cd62000245565b5b6000620002de858286016200029d565b9250506020620002f1858286016200029d565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620003375780820151818401526020810190506200031a565b60008484015250505050565b6000601f19601f8301169050919050565b60006200036182620002fb565b6200036d818562000306565b93506200037f81856020860162000317565b6200038a8162000343565b840191505092915050565b600060ff82169050919050565b620003ad8162000395565b82525050565b60006040820190508181036000830152620003cf818562000354565b9050620003e06020830184620003a2565b9392505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200042b8262000343565b810181811067ffffffffffffffff821117156200044d576200044c620003f1565b5b80604052505050565b6000620004626200023b565b905062000470828262000420565b919050565b600067ffffffffffffffff821115620004935762000492620003f1565b5b6200049e8262000343565b9050602081019050919050565b6000620004c2620004bc8462000475565b62000456565b905082815260208101848484011115620004e157620004e0620003ec565b5b620004ee84828562000317565b509392505050565b600082601f8301126200050e576200050d620003e7565b5b815162000520848260208601620004ab565b91505092915050565b60006020828403121562000542576200054162000245565b5b600082015167ffffffffffffffff8111156200056357620005626200024a565b5b6200057184828501620004f6565b91505092915050565b611393806200058a6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063c55dae6314610046578063d83678ac14610064578063fc2191f014610082575b600080fd5b61004e6100b2565b60405161005b9190610c78565b60405180910390f35b61006c6100d8565b6040516100799190610c78565b60405180910390f35b61009c60048036038101906100979190610ccb565b6100fe565b6040516100a99190610e78565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610106610bb2565b61010e61043e565b60006101228561011d9061103b565b610484565b90506000610138846101339061103b565b610484565b9050600061014e866101499061103b565b610484565b9050610158610bb2565b6000600f54905060005b600260ff168160ff1610156102ea5760006101a460098360ff166002811061018d5761018c61104e565b5b60030201600201548661049a90919063ffffffff16565b905060006101d08760098560ff16600281106101c3576101c261104e565b5b60030201600101546104ae565b905060006101e18383600f54610527565b90506101ed88826105a5565b975061021760098560ff16600281106102095761020861104e565b5b6003020160010154826105a5565b60098560ff166002811061022e5761022d61104e565b5b60030201600101819055506000610247866010546105b9565b905061028661027f600f5460098860ff16600281106102695761026861104e565b5b60030201600101546105cd90919063ffffffff16565b8288610527565b9550604051806040016040528060098760ff16600281106102aa576102a961104e565b5b6003020160000154815260200183815250878660ff16600281106102d1576102d061104e565b5b6020020181905250505050508080600101915050610162565b5060005b600260ff168160ff161015610426576000610314600f54846105e190919063ffffffff16565b905061032c81610326856010546105a5565b85610527565b92506000600f5490506000600f54905060006001600261034c91906110b9565b90505b60008160ff161061041557600060098260ff16600281106103735761037261104e565b5b60030201600201549050600060098360ff16600281106103965761039561104e565b5b600302016001015490506103ab868684610527565b60098460ff16600281106103c2576103c161104e565b5b60030201600201819055506103d8868583610527565b60098460ff16600281106103ef576103ee61104e565b5b60030201600101819055508194508093505050808061040d906110ee565b91505061034f565b5050505080806001019150506102ee565b5081955050505050506104376105f5565b9392505050565b60026000540361047a576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b600061049382600001516105ff565b9050919050565b60006104a68383610613565b905092915050565b60006104b98361068c565b6104ca576104c76000610699565b92505b6104d38261068c565b6104e4576104e16000610699565b91505b60008390506000839050600061051960008484608073ffffffffffffffffffffffffffffffffffffffff16635211c6796106ad565b905080935050505092915050565b600061053284610741565b61054357610540600061074e565b93505b61054c8361068c565b61055d5761055a6000610699565b92505b6105668261068c565b610577576105746000610699565b91505b60008490506000849050600084905060006105956000858585610762565b9050809450505050509392505050565b60006105b1838361081a565b905092915050565b60006105c58383610893565b905092915050565b60006105d9838361090b565b905092915050565b60006105ed8383610984565b905092915050565b6001600081905550565b600061060c8260006109fd565b9050919050565b600061061e8361068c565b61062f5761062c6000610699565b92505b6106388261068c565b610649576106466000610699565b91505b60008390506000839050600061067e60008484608073ffffffffffffffffffffffffffffffffffffffff1663650de1cf6106ad565b905080935050505092915050565b6000808214159050919050565b60006106a6826000610a97565b9050919050565b600060608383886106bd89610b39565b6106c689610b39565b6040518463ffffffff1660e01b81526004016106e4939291906111a5565b600060405180830381865afa158015610701573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061072a919061125a565b905061073581610b96565b91505095945050505050565b6000808214159050919050565b600061075b826000610a97565b9050919050565b60006060608073ffffffffffffffffffffffffffffffffffffffff1663c2d969528761078d88610b39565b61079688610b39565b61079f88610b39565b6040518563ffffffff1660e01b81526004016107be94939291906112a3565b600060405180830381865afa1580156107db573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610804919061125a565b905061080f81610ba4565b915050949350505050565b60006108258361068c565b610836576108336000610699565b92505b61083f8261068c565b6108505761084d6000610699565b91505b60008390506000839050600061088560008484608073ffffffffffffffffffffffffffffffffffffffff1663cc2cbeff6106ad565b905080935050505092915050565b600061089e8361068c565b6108af576108ac6000610699565b92505b6108b88261068c565b6108c9576108c66000610699565b91505b6000839050600083905060006108fd60008484608073ffffffffffffffffffffffffffffffffffffffff16622df6196106ad565b905080935050505092915050565b60006109168361068c565b610927576109246000610699565b92505b6109308261068c565b6109415761093e6000610699565b91505b60008390506000839050600061097660008484608073ffffffffffffffffffffffffffffffffffffffff166392348b346106ad565b905080935050505092915050565b600061098f8361068c565b6109a05761099d6000610699565b92505b6109a98261068c565b6109ba576109b76000610699565b91505b6000839050600083905060006109ef60008484608073ffffffffffffffffffffffffffffffffffffffff1663874b1c106106ad565b905080935050505092915050565b60006060608073ffffffffffffffffffffffffffffffffffffffff16635fa55ca784866040518363ffffffff1660e01b8152600401610a3d9291906112fd565b600060405180830381865afa158015610a5a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610a83919061125a565b9050610a8e81610ba4565b91505092915050565b60006060608073ffffffffffffffffffffffffffffffffffffffff166319e1c5c4610ac186610b39565b856040518363ffffffff1660e01b8152600401610adf92919061132d565b600060405180830381865afa158015610afc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b25919061125a565b9050610b3081610ba4565b91505092915050565b6060602067ffffffffffffffff811115610b5657610b55610ea9565b5b6040519080825280601f01601f191660200182016040528015610b885781602001600182028036833780820191505090505b509050816020820152919050565b600060208201519050919050565b600060208201519050919050565b60405180604001604052806002905b610bc9610bdf565b815260200190600190039081610bc15790505090565b604051806040016040528060008152602001600081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c3e610c39610c3484610bf9565b610c19565b610bf9565b9050919050565b6000610c5082610c23565b9050919050565b6000610c6282610c45565b9050919050565b610c7281610c57565b82525050565b6000602082019050610c8d6000830184610c69565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600060208284031215610cc257610cc1610ca7565b5b81905092915050565b600080600060608486031215610ce457610ce3610c9d565b5b600084013567ffffffffffffffff811115610d0257610d01610ca2565b5b610d0e86828701610cac565b935050602084013567ffffffffffffffff811115610d2f57610d2e610ca2565b5b610d3b86828701610cac565b925050604084013567ffffffffffffffff811115610d5c57610d5b610ca2565b5b610d6886828701610cac565b9150509250925092565b600060029050919050565b600081905092915050565b6000819050919050565b6000819050919050565b6000610db7610db2610dad84610d92565b610c19565b610d92565b9050919050565b610dc781610d9c565b82525050565b604082016000820151610de36000850182610dbe565b506020820151610df66020850182610dbe565b50505050565b6000610e088383610dcd565b60408301905092915050565b6000602082019050919050565b610e2a81610d72565b610e348184610d7d565b9250610e3f82610d88565b8060005b83811015610e70578151610e578782610dfc565b9650610e6283610e14565b925050600181019050610e43565b505050505050565b6000608082019050610e8d6000830184610e21565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ee182610e98565b810181811067ffffffffffffffff82111715610f0057610eff610ea9565b5b80604052505050565b6000610f13610c93565b9050610f1f8282610ed8565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115610f4e57610f4d610ea9565b5b610f5782610e98565b9050602081019050919050565b82818337600083830152505050565b6000610f86610f8184610f33565b610f09565b905082815260208101848484011115610fa257610fa1610f2e565b5b610fad848285610f64565b509392505050565b600082601f830112610fca57610fc9610f29565b5b8135610fda848260208601610f73565b91505092915050565b600060208284031215610ff957610ff8610e93565b5b6110036020610f09565b9050600082013567ffffffffffffffff81111561102357611022610f24565b5b61102f84828501610fb5565b60008301525092915050565b60006110473683610fe3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110c48261107d565b91506110cf8361107d565b9250828203905060ff8111156110e8576110e761108a565b5b92915050565b60006110f98261107d565b91506000820361110c5761110b61108a565b5b600182039050919050565b6111208161107d565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611160578082015181840152602081019050611145565b60008484015250505050565b600061117782611126565b6111818185611131565b9350611191818560208601611142565b61119a81610e98565b840191505092915050565b60006060820190506111ba6000830186611117565b81810360208301526111cc818561116c565b905081810360408301526111e0818461116c565b9050949350505050565b60006111fd6111f884610f33565b610f09565b90508281526020810184848401111561121957611218610f2e565b5b611224848285611142565b509392505050565b600082601f83011261124157611240610f29565b5b81516112518482602086016111ea565b91505092915050565b6000602082840312156112705761126f610c9d565b5b600082015167ffffffffffffffff81111561128e5761128d610ca2565b5b61129a8482850161122c565b91505092915050565b60006080820190506112b86000830187611117565b81810360208301526112ca818661116c565b905081810360408301526112de818561116c565b905081810360608301526112f2818461116c565b905095945050505050565b60006040820190506113126000830185611117565b8181036020830152611324818461116c565b90509392505050565b60006040820190508181036000830152611347818561116c565b90506113566020830184611117565b939250505056fea2646970667358221220b7fd174d0614f6abac8dfd2e0f4d5a52e093f95fdbee0dee6a2fabaa99a88df764736f6c63430008180033";

type OrderBookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderBookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrderBook__factory extends ContractFactory {
  constructor(...args: OrderBookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tradeToken: AddressLike,
    _baseToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_tradeToken, _baseToken, overrides || {});
  }
  override deploy(
    _tradeToken: AddressLike,
    _baseToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_tradeToken, _baseToken, overrides || {}) as Promise<
      OrderBook & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OrderBook__factory {
    return super.connect(runner) as OrderBook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderBookInterface {
    return new Interface(_abi) as OrderBookInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): OrderBook {
    return new Contract(address, _abi, runner) as unknown as OrderBook;
  }
}
