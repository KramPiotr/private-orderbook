/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { OrderBook, OrderBookInterface } from "../../contracts/OrderBook";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tradeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "baseToken",
    outputs: [
      {
        internalType: "contract IFHERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "publicKey",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Permission",
        name: "permission",
        type: "tuple",
      },
    ],
    name: "getMostCompetitiveBuyQty",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "publicKey",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Permission",
        name: "permission",
        type: "tuple",
      },
    ],
    name: "getMostCompetitiveFillOrderId",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "publicKey",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Permission",
        name: "permission",
        type: "tuple",
      },
    ],
    name: "getMostCompetitiveFillQty",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "publicKey",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Permission",
        name: "permission",
        type: "tuple",
      },
    ],
    name: "getQtyNotFilled",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "orderIdBytes",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "priceBytes",
        type: "tuple",
      },
    ],
    name: "insertBuyOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "orderIdBytes",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "priceBytes",
        type: "tuple",
      },
    ],
    name: "insertSellOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lastFills",
    outputs: [
      {
        internalType: "euint8",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "euint8",
        name: "quantity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastShiftBy",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "priceBytes",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "qtyBytes",
        type: "tuple",
      },
    ],
    name: "placeBuyOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "priceBytes",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct inEuint8",
        name: "qtyBytes",
        type: "tuple",
      },
    ],
    name: "placeSellOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "qtyNotFilled",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "shiftBuyBook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shiftSellBook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeToken",
    outputs: [
      {
        internalType: "contract IFHERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002878380380620028788339818101604052810190620000379190620002b4565b600160008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000d36000620000f960201b60201c565b601581905550620000eb6001620000f960201b60201c565b60168190555050506200057a565b60006200010e8260006200011560201b60201c565b9050919050565b60006060608073ffffffffffffffffffffffffffffffffffffffff166319e1c5c46200014786620001cc60201b60201c565b856040518363ffffffff1660e01b815260040162000167929190620003b3565b600060405180830381865afa15801562000185573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190620001b0919062000529565b9050620001c3816200022d60201b60201c565b91505092915050565b6060602067ffffffffffffffff811115620001ec57620001eb620003f1565b5b6040519080825280601f01601f1916602001820160405280156200021f5781602001600182028036833780820191505090505b509050816020820152919050565b600060208201519050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200027c826200024f565b9050919050565b6200028e816200026f565b81146200029a57600080fd5b50565b600081519050620002ae8162000283565b92915050565b60008060408385031215620002ce57620002cd62000245565b5b6000620002de858286016200029d565b9250506020620002f1858286016200029d565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620003375780820151818401526020810190506200031a565b60008484015250505050565b6000601f19601f8301169050919050565b60006200036182620002fb565b6200036d818562000306565b93506200037f81856020860162000317565b6200038a8162000343565b840191505092915050565b600060ff82169050919050565b620003ad8162000395565b82525050565b60006040820190508181036000830152620003cf818562000354565b9050620003e06020830184620003a2565b9392505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200042b8262000343565b810181811067ffffffffffffffff821117156200044d576200044c620003f1565b5b80604052505050565b6000620004626200023b565b905062000470828262000420565b919050565b600067ffffffffffffffff821115620004935762000492620003f1565b5b6200049e8262000343565b9050602081019050919050565b6000620004c2620004bc8462000475565b62000456565b905082815260208101848484011115620004e157620004e0620003ec565b5b620004ee84828562000317565b509392505050565b600082601f8301126200050e576200050d620003e7565b5b815162000520848260208601620004ab565b91505092915050565b60006020828403121562000542576200054162000245565b5b600082015167ffffffffffffffff8111156200056357620005626200024a565b5b6200057184828501620004f6565b91505092915050565b6122ee806200058a6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806382b0076811610097578063b87309a311610066578063b87309a31461025f578063c55dae631461028f578063d83678ac146102ad578063e9643003146102cb576100f5565b806382b007681461020157806383a2377b1461021d578063933f7b4214610227578063a4447cc114610243576100f5565b806352f77f41116100d357806352f77f41146101675780636f0c16c914610197578063740cd32b146101c757806376e79deb146101d1576100f5565b80630429d3f4146100fa5780633788364c14610118578063388c982914610149575b600080fd5b6101026102e7565b60405161010f9190611b41565b60405180910390f35b610132600480360381019061012d9190611b9c565b6102ed565b604051610140929190611bc9565b60405180910390f35b610151610317565b60405161015e9190611b41565b60405180910390f35b610181600480360381019061017c9190611c16565b61031d565b60405161018e9190611cef565b60405180910390f35b6101b160048036038101906101ac9190611c16565b610336565b6040516101be9190611cef565b60405180910390f35b6101cf610369565b005b6101eb60048036038101906101e69190611c16565b6104bb565b6040516101f89190611cef565b60405180910390f35b61021b60048036038101906102169190611d30565b6104ee565b005b6102256107cd565b005b610241600480360381019061023c9190611d30565b61091f565b005b61025d60048036038101906102589190611d30565b610b17565b005b61027960048036038101906102749190611c16565b610df6565b6040516102869190611cef565b60405180910390f35b610297610e29565b6040516102a49190611e1d565b60405180910390f35b6102b5610e4f565b6040516102c29190611e1d565b60405180910390f35b6102e560048036038101906102e09190611d30565b610e75565b005b60145481565b600f81600281106102fd57600080fd5b600202016000915090508060000154908060010154905082565b60135481565b606061032f601454836000013561106d565b9050919050565b6060610362600f6000600281106103505761034f611e38565b5b6002020160010154836000013561106d565b9050919050565b6000601354905060005b600160026103819190611ea3565b60ff168160ff1610156104b75760006103a5601554846110a390919063ffffffff16565b90506103bd816103b7856016546110b7565b856110cb565b925060006015549050600060155490506000600160026103dd9190611ea3565b90505b60008160ff16106104a657600060098260ff166002811061040457610403611e38565b5b60030201600201549050600060098360ff166002811061042757610426611e38565b5b6003020160010154905061043c8686846110cb565b60098460ff166002811061045357610452611e38565b5b60030201600201819055506104698685836110cb565b60098460ff16600281106104805761047f611e38565b5b60030201600101819055508194508093505050808061049e90611ed8565b9150506103e0565b505050508080600101915050610373565b5050565b60606104e7600f6000600281106104d5576104d4611e38565b5b6002020160000154836000013561106d565b9050919050565b6104f6611149565b600061050a8361050590612098565b61118f565b905060006105208361051b90612098565b61118f565b9050600061052e60006111a5565b90506000839050600083905060006014549050600061055a6015546014546110a390919063ffffffff16565b90506000601554905060005b600260ff168160ff1610156107b85760006105fe6105ad60155460038560ff166002811061059757610596611e38565b5b60030201600201546111c890919063ffffffff16565b6105f96105c3868d6111dc90919063ffffffff16565b6105f48d60038860ff16600281106105de576105dd611e38565b5b60030201600201546110a390919063ffffffff16565b6111f0565b611269565b90506106138861060e86846111f0565b611269565b975060038260ff166002811061062c5761062b611e38565b5b6003020160020154925060006106618960038560ff166002811061065357610652611e38565b5b60030201600001548a6110cb565b9050600061068e8a60038660ff16600281106106805761067f611e38565b5b60030201600201548a6110cb565b905060006106bb8b60038760ff16600281106106ad576106ac611e38565b5b60030201600101548a6110cb565b90506106e68b8b60038860ff16600281106106d9576106d8611e38565b5b60030201600001546110cb565b60038660ff16600281106106fd576106fc611e38565b5b60030201600001819055506107318b8a60038860ff166002811061072457610723611e38565b5b60030201600201546110cb565b60038660ff166002811061074857610747611e38565b5b600302016002018190555061077c8b8960038860ff166002811061076f5761076e611e38565b5b60030201600101546110cb565b60038660ff166002811061079357610792611e38565b5b6003020160010181905550829950819850809750505050508080600101915050610566565b5050505050505050506107c96112e2565b5050565b6000601354905060005b600160026107e59190611ea3565b60ff168160ff16101561091b576000610809601554846110a390919063ffffffff16565b90506108218161081b856016546110b7565b856110cb565b925060006015549050600060155490506000600160026108419190611ea3565b90505b60008160ff161061090a57600060038260ff166002811061086857610867611e38565b5b60030201600201549050600060038360ff166002811061088b5761088a611e38565b5b600302016001015490506108a08686846110cb565b60038460ff16600281106108b7576108b6611e38565b5b60030201600201819055506108cd8685836110cb565b60038460ff16600281106108e4576108e3611e38565b5b60030201600101819055508194508093505050808061090290611ed8565b915050610844565b5050505080806001019150506107d7565b5050565b610927611149565b600061093b8261093690612098565b61118f565b905060006109518461094c90612098565b61118f565b90506000601554905060005b600260ff168160ff161015610af957600061099f60038360ff166002811061098857610987611e38565b5b6003020160020154856112ec90919063ffffffff16565b905060006109cb8660038560ff16600281106109be576109bd611e38565b5b6003020160010154611300565b905060006109dc83836015546110cb565b90506109e887826110b7565b9650610a1260038560ff1660028110610a0457610a03611e38565b5b6003020160010154826110b7565b60038560ff1660028110610a2957610a28611e38565b5b60030201600101819055506000610a4286601654611379565b9050610a81610a7a60155460038860ff1660028110610a6457610a63611e38565b5b60030201600101546111c890919063ffffffff16565b82886110cb565b9550604051806040016040528060098760ff1660028110610aa557610aa4611e38565b5b6003020160000154815260200183815250600f8660ff1660028110610acd57610acc611e38565b5b60020201600082015181600001556020820151816001015590505050505050808060010191505061095d565b508060138190555082601481905550505050610b136112e2565b5050565b610b1f611149565b6000610b3383610b2e90612098565b61118f565b90506000610b4983610b4490612098565b61118f565b90506000610b5760006111a5565b905060008390506000839050600060145490506000610b836015546014546110a390919063ffffffff16565b90506000601554905060005b600260ff168160ff161015610de1576000610c27610bd660155460098560ff1660028110610bc057610bbf611e38565b5b60030201600201546111c890919063ffffffff16565b610c22610bec868d6112ec90919063ffffffff16565b610c1d8d60098860ff1660028110610c0757610c06611e38565b5b600302016002015461138d90919063ffffffff16565b6111f0565b611269565b9050610c3c88610c3786846111f0565b611269565b975060098260ff1660028110610c5557610c54611e38565b5b600302016002015492506000610c8a8960098560ff1660028110610c7c57610c7b611e38565b5b60030201600001548a6110cb565b90506000610cb78a60098660ff1660028110610ca957610ca8611e38565b5b60030201600201548a6110cb565b90506000610ce48b60098760ff1660028110610cd657610cd5611e38565b5b60030201600101548a6110cb565b9050610d0f8b8b60098860ff1660028110610d0257610d01611e38565b5b60030201600001546110cb565b60098660ff1660028110610d2657610d25611e38565b5b6003020160000181905550610d5a8b8a60098860ff1660028110610d4d57610d4c611e38565b5b60030201600201546110cb565b60098660ff1660028110610d7157610d70611e38565b5b6003020160020181905550610da58b8960098860ff1660028110610d9857610d97611e38565b5b60030201600101546110cb565b60098660ff1660028110610dbc57610dbb611e38565b5b6003020160010181905550829950819850809750505050508080600101915050610b8f565b505050505050505050610df26112e2565b5050565b6060610e226003600060028110610e1057610e0f611e38565b5b6003020160010154836000013561106d565b9050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e7d611149565b6000610e9182610e8c90612098565b61118f565b90506000610ea784610ea290612098565b61118f565b90506000601554905060005b600260ff168160ff16101561104f576000610ef560098360ff1660028110610ede57610edd611e38565b5b6003020160020154856111dc90919063ffffffff16565b90506000610f218660098560ff1660028110610f1457610f13611e38565b5b6003020160010154611300565b90506000610f3283836015546110cb565b9050610f3e87826110b7565b9650610f6860098560ff1660028110610f5a57610f59611e38565b5b6003020160010154826110b7565b60098560ff1660028110610f7f57610f7e611e38565b5b60030201600101819055506000610f9886601654611379565b9050610fd7610fd060155460098860ff1660028110610fba57610fb9611e38565b5b60030201600101546111c890919063ffffffff16565b82886110cb565b9550604051806040016040528060098760ff1660028110610ffb57610ffa611e38565b5b6003020160000154815260200183815250600f8660ff166002811061102357611022611e38565b5b600202016000820151816000015560208201518160010155905050505050508080600101915050610eb3565b5080601381905550826014819055505050506110696112e2565b5050565b6060611078836113a1565b6110895761108660006113ae565b92505b600083905061109a600082856113c2565b91505092915050565b60006110af8383611478565b905092915050565b60006110c383836114f1565b905092915050565b60006110d68461156a565b6110e7576110e46000611577565b93505b6110f0836113a1565b611101576110fe60006113ae565b92505b61110a826113a1565b61111b5761111860006113ae565b91505b6000849050600084905060008490506000611139600085858561158b565b9050809450505050509392505050565b600260005403611185576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b600061119e8260000151611643565b9050919050565b6000806000905082156111b757600190505b6111c081611577565b915050919050565b60006111d48383611657565b905092915050565b60006111e883836116d0565b905092915050565b60006111fb8361156a565b61120c576112096000611577565b92505b6112158261156a565b611226576112236000611577565b91505b60008390506000839050600061125b60008484608073ffffffffffffffffffffffffffffffffffffffff1663ae104cfd611749565b905080935050505092915050565b60006112748361156a565b611285576112826000611577565b92505b61128e8261156a565b61129f5761129c6000611577565b91505b6000839050600083905060006112d460008484608073ffffffffffffffffffffffffffffffffffffffff166372d456f5611749565b905080935050505092915050565b6001600081905550565b60006112f883836117dd565b905092915050565b600061130b836113a1565b61131c5761131960006113ae565b92505b611325826113a1565b6113365761133360006113ae565b91505b60008390506000839050600061136b60008484608073ffffffffffffffffffffffffffffffffffffffff16635211c679611749565b905080935050505092915050565b60006113858383611856565b905092915050565b600061139983836118ce565b905092915050565b6000808214159050919050565b60006113bb826000611947565b9050919050565b6060608073ffffffffffffffffffffffffffffffffffffffff1663a1848ff3856113eb866119e9565b856040516020016113fc91906120d6565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161142993929190612100565b600060405180830381865afa158015611446573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061146f91906121b5565b90509392505050565b6000611483836113a1565b6114945761149160006113ae565b92505b61149d826113a1565b6114ae576114ab60006113ae565b91505b6000839050600083905060006114e360008484608073ffffffffffffffffffffffffffffffffffffffff1663874b1c10611749565b905080935050505092915050565b60006114fc836113a1565b61150d5761150a60006113ae565b92505b611516826113a1565b6115275761152460006113ae565b91505b60008390506000839050600061155c60008484608073ffffffffffffffffffffffffffffffffffffffff1663cc2cbeff611749565b905080935050505092915050565b6000808214159050919050565b6000611584826000611947565b9050919050565b60006060608073ffffffffffffffffffffffffffffffffffffffff1663c2d96952876115b6886119e9565b6115bf886119e9565b6115c8886119e9565b6040518563ffffffff1660e01b81526004016115e794939291906121fe565b600060405180830381865afa158015611604573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061162d91906121b5565b905061163881611a46565b915050949350505050565b6000611650826000611a54565b9050919050565b6000611662836113a1565b6116735761167060006113ae565b92505b61167c826113a1565b61168d5761168a60006113ae565b91505b6000839050600083905060006116c260008484608073ffffffffffffffffffffffffffffffffffffffff166392348b34611749565b905080935050505092915050565b60006116db836113a1565b6116ec576116e960006113ae565b92505b6116f5826113a1565b6117065761170360006113ae565b91505b60008390506000839050600061173b60008484608073ffffffffffffffffffffffffffffffffffffffff1663650de1cf611749565b905080935050505092915050565b60006060838388611759896119e9565b611762896119e9565b6040518463ffffffff1660e01b815260040161178093929190612100565b600060405180830381865afa15801561179d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906117c691906121b5565b90506117d181611aee565b91505095945050505050565b60006117e8836113a1565b6117f9576117f660006113ae565b92505b611802826113a1565b6118135761181060006113ae565b91505b60008390506000839050600061184860008484608073ffffffffffffffffffffffffffffffffffffffff1663eb274b77611749565b905080935050505092915050565b6000611861836113a1565b6118725761186f60006113ae565b92505b61187b826113a1565b61188c5761188960006113ae565b91505b6000839050600083905060006118c060008484608073ffffffffffffffffffffffffffffffffffffffff16622df619611749565b905080935050505092915050565b60006118d9836113a1565b6118ea576118e760006113ae565b92505b6118f3826113a1565b6119045761190160006113ae565b91505b60008390506000839050600061193960008484608073ffffffffffffffffffffffffffffffffffffffff1663b9c7a54b611749565b905080935050505092915050565b60006060608073ffffffffffffffffffffffffffffffffffffffff166319e1c5c4611971866119e9565b856040518363ffffffff1660e01b815260040161198f929190612258565b600060405180830381865afa1580156119ac573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906119d591906121b5565b90506119e081611a46565b91505092915050565b6060602067ffffffffffffffff811115611a0657611a05611f06565b5b6040519080825280601f01601f191660200182016040528015611a385781602001600182028036833780820191505090505b509050816020820152919050565b600060208201519050919050565b60006060608073ffffffffffffffffffffffffffffffffffffffff16635fa55ca784866040518363ffffffff1660e01b8152600401611a94929190612288565b600060405180830381865afa158015611ab1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611ada91906121b5565b9050611ae581611a46565b91505092915050565b600060208201519050919050565b6000819050919050565b6000819050919050565b6000611b2b611b26611b2184611afc565b611b06565b611afc565b9050919050565b611b3b81611b10565b82525050565b6000602082019050611b566000830184611b32565b92915050565b6000604051905090565b600080fd5b600080fd5b611b7981611afc565b8114611b8457600080fd5b50565b600081359050611b9681611b70565b92915050565b600060208284031215611bb257611bb1611b66565b5b6000611bc084828501611b87565b91505092915050565b6000604082019050611bde6000830185611b32565b611beb6020830184611b32565b9392505050565b600080fd5b600060408284031215611c0d57611c0c611bf2565b5b81905092915050565b600060208284031215611c2c57611c2b611b66565b5b600082013567ffffffffffffffff811115611c4a57611c49611b6b565b5b611c5684828501611bf7565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c99578082015181840152602081019050611c7e565b60008484015250505050565b6000601f19601f8301169050919050565b6000611cc182611c5f565b611ccb8185611c6a565b9350611cdb818560208601611c7b565b611ce481611ca5565b840191505092915050565b60006020820190508181036000830152611d098184611cb6565b905092915050565b600060208284031215611d2757611d26611bf2565b5b81905092915050565b60008060408385031215611d4757611d46611b66565b5b600083013567ffffffffffffffff811115611d6557611d64611b6b565b5b611d7185828601611d11565b925050602083013567ffffffffffffffff811115611d9257611d91611b6b565b5b611d9e85828601611d11565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611de3611dde611dd984611da8565b611b06565b611da8565b9050919050565b6000611df582611dc8565b9050919050565b6000611e0782611dea565b9050919050565b611e1781611dfc565b82525050565b6000602082019050611e326000830184611e0e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611eae82611e67565b9150611eb983611e67565b9250828203905060ff811115611ed257611ed1611e74565b5b92915050565b6000611ee382611e67565b915060008203611ef657611ef5611e74565b5b600182039050919050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f3e82611ca5565b810181811067ffffffffffffffff82111715611f5d57611f5c611f06565b5b80604052505050565b6000611f70611b5c565b9050611f7c8282611f35565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115611fab57611faa611f06565b5b611fb482611ca5565b9050602081019050919050565b82818337600083830152505050565b6000611fe3611fde84611f90565b611f66565b905082815260208101848484011115611fff57611ffe611f8b565b5b61200a848285611fc1565b509392505050565b600082601f83011261202757612026611f86565b5b8135612037848260208601611fd0565b91505092915050565b60006020828403121561205657612055611f01565b5b6120606020611f66565b9050600082013567ffffffffffffffff8111156120805761207f611f81565b5b61208c84828501612012565b60008301525092915050565b60006120a43683612040565b9050919050565b6000819050919050565b6000819050919050565b6120d06120cb826120ab565b6120b5565b82525050565b60006120e282846120bf565b60208201915081905092915050565b6120fa81611e67565b82525050565b600060608201905061211560008301866120f1565b81810360208301526121278185611cb6565b9050818103604083015261213b8184611cb6565b9050949350505050565b600061215861215384611f90565b611f66565b90508281526020810184848401111561217457612173611f8b565b5b61217f848285611c7b565b509392505050565b600082601f83011261219c5761219b611f86565b5b81516121ac848260208601612145565b91505092915050565b6000602082840312156121cb576121ca611b66565b5b600082015167ffffffffffffffff8111156121e9576121e8611b6b565b5b6121f584828501612187565b91505092915050565b600060808201905061221360008301876120f1565b81810360208301526122258186611cb6565b905081810360408301526122398185611cb6565b9050818103606083015261224d8184611cb6565b905095945050505050565b600060408201905081810360008301526122728185611cb6565b905061228160208301846120f1565b9392505050565b600060408201905061229d60008301856120f1565b81810360208301526122af8184611cb6565b9050939250505056fea26469706673582212200a5eff09909a5524c677f9ee9f73d1fdc4fe7159aae97e8bc29a9fdca3d5401a64736f6c63430008180033";

type OrderBookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderBookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrderBook__factory extends ContractFactory {
  constructor(...args: OrderBookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tradeToken: AddressLike,
    _baseToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_tradeToken, _baseToken, overrides || {});
  }
  override deploy(
    _tradeToken: AddressLike,
    _baseToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_tradeToken, _baseToken, overrides || {}) as Promise<
      OrderBook & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OrderBook__factory {
    return super.connect(runner) as OrderBook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderBookInterface {
    return new Interface(_abi) as OrderBookInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): OrderBook {
    return new Contract(address, _abi, runner) as unknown as OrderBook;
  }
}
